mixin panel()

  -
    const modifiers = ['', 'min', 'max'];
    const createClasses = (index) => {
      if (index !== 0) {
        return `panel__field-value_type_${modifiers[index]} js-panel__field-value_type_${modifiers[index]}`;
      }
    };
    const settings = ['progress', 'vertical', 'range', 'label', 'scale'];
    const scaleModifier = 'panel__field-settings js-panel__field-settings_type_scale';

  div.panel
    each value, index in Array(3)
      div.panel__wrapper.panel__wrapper_type_value.js-panel__wrapper_type_value
        label.panel__mark=`value ${modifiers[index] || ''}`
          input.panel__field-value.js-panel__field-value(type = "number" class = createClasses(index))

    each value, index in Array(2)
      div.panel__wrapper
        label.panel__mark=`${modifiers[index + 1]}`
        input.panel__field-value.js-panel__field-settings(type = "number")

    each value in settings
      div.panel__wrapper.panel__wrapper_type_checkbox=value
        label.panel__mark-settings
          input.panel__field-settings.js-panel__field-settings(type = "checkbox"
            class = value === 'scale' ? scaleModifier : '')
          span.panel__toggle

    div.panel__wrapper.panel__wrapper_type_step.js-panel__wrapper_type_step
      label.panel__mark step
      input.panel__field-step.js-panel__field-step(type = "number")